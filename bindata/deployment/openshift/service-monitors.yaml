apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  labels:
    name: monitor-metallb-speaker
  name: monitor-metallb-speaker
  namespace: '{{.NameSpace}}'
spec:
  endpoints:
    - interval: 30s
      port: speaker-metrics
      bearerTokenFile: "/var/run/secrets/kubernetes.io/serviceaccount/token"
      scheme: "https"
      tlsConfig:
        caFile: "/etc/prometheus/configmaps/serving-certs-ca-bundle/service-ca.crt"
        serverName: "metallb-speaker-monitor-service.{{.NameSpace}}.svc"
        certFile: /etc/prometheus/secrets/metrics-client-certs/tls.crt
        keyFile: /etc/prometheus/secrets/metrics-client-certs/tls.key
    - interval: 30s
      port: frr-metrics
      bearerTokenFile: "/var/run/secrets/kubernetes.io/serviceaccount/token"
      scheme: "https"
      tlsConfig:
        caFile: "/etc/prometheus/configmaps/serving-certs-ca-bundle/service-ca.crt"
        serverName: "metallb-speaker-monitor-service.{{.NameSpace}}.svc"
        certFile: /etc/prometheus/secrets/metrics-client-certs/tls.crt
        keyFile: /etc/prometheus/secrets/metrics-client-certs/tls.key
  jobLabel: "component"
  namespaceSelector:
    matchNames:
      - '{{.NameSpace}}'
  selector:
    matchLabels:
      name: metallb-speaker-monitor-service
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/scrape: "true"
    service.beta.openshift.io/serving-cert-secret-name: speaker-certs-secret
  labels:
    name: metallb-speaker-monitor-service
  name:  metallb-speaker-monitor-service
  namespace: '{{.NameSpace}}'
spec:
  selector:
    component: speaker
  clusterIP: None
  ports:
    - name: speaker-metrics
      port: {{.MetricsPortHttps}}
      targetPort: {{.MetricsPortHttps}}
    - name: frr-metrics
      port: {{.FRRMetricsPortHttps}}
      targetPort: {{.FRRMetricsPortHttps}}
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  labels:
    name: monitor-metallb-controller
  name: monitor-metallb-controller
  namespace: '{{.NameSpace}}'
spec:
  endpoints:
    - interval: 30s
      port: controller-metrics
      bearerTokenFile: "/var/run/secrets/kubernetes.io/serviceaccount/token"
      scheme: "https"
      tlsConfig:
        caFile: "/etc/prometheus/configmaps/serving-certs-ca-bundle/service-ca.crt"
        serverName: "metallb-controller-monitor-service.{{.NameSpace}}.svc"
        certFile: /etc/prometheus/secrets/metrics-client-certs/tls.crt
        keyFile: /etc/prometheus/secrets/metrics-client-certs/tls.key
  jobLabel: "component"
  namespaceSelector:
    matchNames:
      - '{{.NameSpace}}'
  selector:
    matchLabels:
      name: metallb-controller-monitor-service
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/scrape: "true"
    service.beta.openshift.io/serving-cert-secret-name: controller-certs-secret
  labels:
    name: metallb-controller-monitor-service
  name:  metallb-controller-monitor-service
  namespace: '{{.NameSpace}}'
spec:
  selector:
    component: controller
  clusterIP: None
  ports:
    - name: controller-metrics
      port: {{.MetricsPortHttps}}
      targetPort: {{.MetricsPortHttps}}
  sessionAffinity: None
  type: ClusterIP
